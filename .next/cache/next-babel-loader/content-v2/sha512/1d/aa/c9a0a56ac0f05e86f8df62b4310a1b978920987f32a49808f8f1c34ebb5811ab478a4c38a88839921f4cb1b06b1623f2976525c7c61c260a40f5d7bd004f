{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\NextJS\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = MongoClient.connect(\"mongodb+srv://Test:Test@cluster0.reqpx.mongodb.net?retryWrites=true&w=majority\");\n  const db = (await client).db('meetups');\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  (await client).close;\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  const client = MongoClient.connect(\"mongodb+srv://Test:Test@cluster0.reqpx.mongodb.net?retryWrites=true&w=majority\");\n  const db = (await client).db('meetups');\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: new ObjectId(meetupId)\n  });\n  (await client).close;\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/NextJS/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","Fragment","Head","MeetupDetails","props","meetupData","title","description","image","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAD1B;AAEE,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAF1B;AAGE,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAH5B;AAIE,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJhC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;AAED,OAAO,eAAeG,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAGb,WAAW,CAACc,OAAZ,CAAoB,gFAApB,CAAf;AACA,QAAMC,EAAE,GAAG,CAAC,MAAMF,MAAP,EAAeE,EAAf,CAAkB,SAAlB,CAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEA,GAAC,MAAMR,MAAP,EAAeS,KAAf;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AAAV,KAAb,CAAZ;AAFF,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAGb,WAAW,CAACc,OAAZ,CAAoB,gFAApB,CAAf;AACA,QAAMC,EAAE,GAAG,CAAC,MAAMF,MAAP,EAAeE,EAAf,CAAkB,SAAlB,CAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAE,IAAInB,QAAJ,CAAa2B,QAAb;AAAP,GAA1B,CAA7B;AAEA,GAAC,MAAMf,MAAP,EAAeS,KAAf;AACA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACV2B,QAAAA,EAAE,EAAEF,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADM;AAEVrB,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAFZ;AAGVG,QAAAA,OAAO,EAAEqB,cAAc,CAACrB,OAHd;AAIVD,QAAAA,KAAK,EAAEsB,cAAc,CAACtB,KAJZ;AAKVD,QAAAA,WAAW,EAAEuB,cAAc,CAACvB;AALlB;AADP;AADF,GAAP;AAWD;AAED,eAAeJ,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\n\nfunction MeetupDetails(props) {\n  return (\n    <Fragment>\n      <Head>\n        <title>{props.meetupData.title}</title>\n        <meta name=\"description\" content={props.meetupData.description} />\n      </Head>\n      <MeetupDetail\n        image={props.meetupData.image}\n        title={props.meetupData.title}\n        address={props.meetupData.address}\n        description={props.meetupData.description}\n      />\n    </Fragment>\n  );\n}\n\nexport async function getStaticPaths() {\n  const client = MongoClient.connect(\"mongodb+srv://Test:Test@cluster0.reqpx.mongodb.net?retryWrites=true&w=majority\");\n  const db = (await client).db('meetups');\n  const meetupsCollection = db.collection('meetups')\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  (await client).close\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({ params: { meetupId: meetup._id.toString() } }))\n  };\n}\n\nexport async function getStaticProps(context) {\n  //fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  const client = MongoClient.connect(\"mongodb+srv://Test:Test@cluster0.reqpx.mongodb.net?retryWrites=true&w=majority\");\n  const db = (await client).db('meetups');\n  const meetupsCollection = db.collection('meetups')\n\n  const selectedMeetup = await meetupsCollection.findOne({ _id: new ObjectId(meetupId) });\n\n  (await client).close\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}